{"ast":null,"code":"var _jsxFileName = \"D:\\\\bdcrictime\\\\beta\\\\src\\\\Components\\\\NewsCards.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport Link from 'next/link';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport he from 'he';\nimport Moment from 'react-moment';\n\nfunction NewsCards(props) {\n  return __jsx(React.Fragment, null, props.format === 'lead' ? __jsx(Lead, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  })) : props.format === 'boxed-down' ? __jsx(BoxedDown, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  })) : props.format === 'boxed-side' ? __jsx(BoxedSide, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  })) : props.format === 'small-down' ? __jsx(SmallDown, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  })) : props.format === 'small-side' ? __jsx(SmallSide, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  })) : props.format === 'with-count' ? __jsx(WithCount, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  })) : 'Please Insert Card Format');\n}\n\nfunction Lead(props) {\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: props.id && props.slug ? '/' + props.slug : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: props.thumbnail ? props.thumbnail : '/img/post-thumbnail.svg',\n    alt: props.imageAlt ? props.imageAlt : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  })))), __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: props.id && props.slug ? '/' + props.slug : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, props.headline ? he.decode(props.headline) : __jsx(Skeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 63\n    }\n  })))), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, props.leadText ? __jsx(React.Fragment, null, props.leadText, \"...\", ' ', __jsx(Link, {\n    href: props.id && props.slug ? '/' + props.slug : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    className: \"read-more\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }, \" Read Ful Article\"))) : __jsx(Skeleton, {\n    count: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  })))));\n}\n\nfunction BoxedDown(props) {\n  return __jsx(React.Fragment, null, __jsx(SkeletonTheme, {\n    color: \"rgba(255, 255, 255, .1)\",\n    highlightColor: \"rgba(255, 255, 255, .05)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"post2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: props.id && props.slug ? '/' + props.slug : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: props.thumbnail ? props.thumbnail : '/img/newsupdate thumbnail.svg',\n    alt: props.imageAlt ? props.imageAlt : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  })))), __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: props.id && props.slug ? '/' + props.slug : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, props.headline ? he.decode(props.headline) : __jsx(Skeleton, {\n    count: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  })))), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, props.leadText ? props.leadText.slice(0, 240) + '...' : __jsx(Skeleton, {\n    count: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  })), props.leadText ? __jsx(Link, {\n    href: props.id && props.slug ? '/' + props.slug : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    className: \"read-more\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, \" READ MORE\")) : null))));\n}\n\nfunction BoxedSide(props) {\n  return __jsx(React.Fragment, null, __jsx(SkeletonTheme, {\n    color: \"rgba(255, 255, 255, .1)\",\n    highlightColor: \"rgba(255, 255, 255, .05)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"post3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    style: {\n      width: '110%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \" col-sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, __jsx(Link, {\n    href: props.id && props.slug ? '/' + props.slug : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  }, __jsx(\"img\", {\n    src: props.thumbnail ? props.thumbnail : '/img/post-img2.png',\n    alt: props.imageAlt ? props.imageAlt : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }))))), __jsx(\"div\", {\n    className: \"col-sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, __jsx(Link, {\n    href: props.id && props.slug ? '/' + props.slug : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }\n  }, __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, props.headline ? he.decode(props.headline) : __jsx(Skeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 25\n    }\n  })))), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, props.leadText ? props.leadText + '...' : __jsx(Skeleton, {\n    count: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  })), __jsx(Link, {\n    href: props.id && props.slug ? '/' + props.slug : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    className: \"read-more\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 19\n    }\n  }, \" READ MORE\"))))))));\n}\n\nfunction SmallDown(props) {\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"post4 col-md-4 col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: props.id && props.slug ? '/' + props.slug : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: props.thumbnail ? props.thumbnail : '/assets/img/post-img3.svg',\n    alt: props.imageAlt ? props.imageAlt : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 15\n    }\n  })))), __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: props.id && props.slug ? '/' + props.slug : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 15\n    }\n  }, props.headline ? he.decode(props.headline) : __jsx(Skeleton, {\n    count: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 19\n    }\n  })))), __jsx(\"span\", {\n    style: {\n      textTransform: 'uppercase'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }, props.published ? __jsx(Moment, {\n    format: \"DD MMM YYYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  }, props.published) : __jsx(Skeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 15\n    }\n  })))));\n}\n\nfunction SmallSide(props) {\n  return __jsx(React.Fragment, null, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: props.id && props.slug ? '/' + props.slug : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, props.thumbnail ? __jsx(\"img\", {\n    src: props.thumbnail,\n    alt: props.imageAlt ? props.imageAlt : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 17\n    }\n  }) : __jsx(Skeleton, {\n    height: '50px',\n    width: '50px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 17\n    }\n  })))), __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: props.id && props.slug ? '/' + props.slug : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 15\n    }\n  }, props.headline ? he.decode(props.headline) : __jsx(Skeleton, {\n    count: 2,\n    width: '80%',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 19\n    }\n  })))))));\n}\n\nfunction WithCount(props) {\n  return __jsx(React.Fragment, null, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }\n  }, props.count ? props.count : __jsx(Skeleton, {\n    width: \"30px\",\n    height: \"30px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 40\n    }\n  })), __jsx(Link, {\n    href: props.id && props.slug ? '/' + props.slug : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 13\n    }\n  }, props.headline ? he.decode(props.headline) : __jsx(Skeleton, {\n    count: 2,\n    width: '80%',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 17\n    }\n  }))))));\n}\n\nexport default NewsCards;","map":{"version":3,"sources":["D:/bdcrictime/beta/src/Components/NewsCards.js"],"names":["React","Link","Skeleton","SkeletonTheme","he","Moment","NewsCards","props","format","Lead","id","slug","thumbnail","imageAlt","headline","decode","leadText","BoxedDown","slice","BoxedSide","width","SmallDown","textTransform","published","SmallSide","WithCount","count"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Link from 'next/link';\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\nimport he from 'he';\r\nimport Moment from 'react-moment';\r\n\r\nfunction NewsCards(props) {\r\n  return (\r\n    <>\r\n      {props.format === 'lead' ? (\r\n        <Lead {...props} />\r\n      ) : props.format === 'boxed-down' ? (\r\n        <BoxedDown {...props} />\r\n      ) : props.format === 'boxed-side' ? (\r\n        <BoxedSide {...props} />\r\n      ) : props.format === 'small-down' ? (\r\n        <SmallDown {...props} />\r\n      ) : props.format === 'small-side' ? (\r\n        <SmallSide {...props} />\r\n      ) : props.format === 'with-count' ? (\r\n        <WithCount {...props} />\r\n      ) : (\r\n        'Please Insert Card Format'\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Lead(props) {\r\n  return (\r\n    <>\r\n      <div className=\"post\">\r\n        <div className=\"img\">\r\n          <Link\r\n            href={\r\n              props.id && props.slug\r\n                ? '/' + props.slug\r\n                : ''\r\n            }\r\n          >\r\n            <a>\r\n              <img\r\n                src={\r\n                  props.thumbnail ? props.thumbnail : '/img/post-thumbnail.svg'\r\n                }\r\n                alt={props.imageAlt ? props.imageAlt : ''}\r\n              />\r\n            </a>\r\n          </Link>\r\n        </div>\r\n        <div className=\"content\">\r\n          <Link\r\n            href={\r\n              props.id && props.slug\r\n                ? '/' + props.slug\r\n                : ''\r\n            }\r\n          >\r\n            <a>\r\n              <h4>\r\n                {props.headline ? he.decode(props.headline) : <Skeleton />}\r\n              </h4>\r\n            </a>\r\n          </Link>\r\n          <p>\r\n            {props.leadText ? (\r\n              <>\r\n                {props.leadText}...{' '}\r\n                <Link\r\n                  href={\r\n                    props.id && props.slug\r\n                      ? '/' + props.slug\r\n                      : ''\r\n                  }\r\n                >\r\n                  <a className=\"read-more\"> Read Ful Article</a>\r\n                </Link>\r\n              </>\r\n            ) : (\r\n              <Skeleton count={3} />\r\n            )}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction BoxedDown(props) {\r\n  return (\r\n    <>\r\n      <SkeletonTheme\r\n        color=\"rgba(255, 255, 255, .1)\"\r\n        highlightColor=\"rgba(255, 255, 255, .05)\"\r\n      >\r\n        <div className=\"post2\">\r\n          <div className=\"img\">\r\n            <Link\r\n              href={\r\n                props.id && props.slug\r\n                  ? '/' + props.slug\r\n                  : ''\r\n              }\r\n            >\r\n              <a>\r\n                <img\r\n                  src={\r\n                    props.thumbnail\r\n                      ? props.thumbnail\r\n                      : '/img/newsupdate thumbnail.svg'\r\n                  }\r\n                  alt={props.imageAlt ? props.imageAlt : ''}\r\n                />\r\n              </a>\r\n            </Link>\r\n          </div>\r\n          <div className=\"content\">\r\n            <Link\r\n              href={\r\n                props.id && props.slug\r\n                  ? '/' + props.slug\r\n                  : ''\r\n              }\r\n            >\r\n              <a>\r\n                <h5>\r\n                  {props.headline ? (\r\n                    he.decode(props.headline)\r\n                  ) : (\r\n                    <Skeleton count={2} />\r\n                  )}\r\n                </h5>\r\n              </a>\r\n            </Link>\r\n            <p>\r\n              {props.leadText ? (\r\n                props.leadText.slice(0, 240) + '...'\r\n              ) : (\r\n                <Skeleton count={7} />\r\n              )}\r\n            </p>\r\n            {props.leadText ? (\r\n              <Link\r\n                href={\r\n                  props.id && props.slug\r\n                    ? '/' + props.slug\r\n                    : ''\r\n                }\r\n              >\r\n                <a className=\"read-more\"> READ MORE</a>\r\n              </Link>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </SkeletonTheme>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction BoxedSide(props) {\r\n  return (\r\n    <>\r\n      <SkeletonTheme\r\n        color=\"rgba(255, 255, 255, .1)\"\r\n        highlightColor=\"rgba(255, 255, 255, .05)\"\r\n      >\r\n        <div className=\"post3 \">\r\n          <div className=\"row\" style={{ width: '110%' }}>\r\n            <div className=\" col-sm-4\">\r\n              <div className=\"img\">\r\n                <Link\r\n                  href={\r\n                    props.id && props.slug\r\n                      ? '/' + props.slug\r\n                      : ''\r\n                  }\r\n                >\r\n                  <a>\r\n                    <img\r\n                      src={\r\n                        props.thumbnail ? props.thumbnail : '/img/post-img2.png'\r\n                      }\r\n                      alt={props.imageAlt ? props.imageAlt : ''}\r\n                    />\r\n                  </a>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm-8\">\r\n              <div className=\"content\">\r\n                <Link\r\n                  href={\r\n                    props.id && props.slug\r\n                      ? '/' + props.slug\r\n                      : ''\r\n                  }\r\n                >\r\n                  <a>\r\n                    <h5>\r\n                      {props.headline ? (\r\n                        he.decode(props.headline)\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </h5>\r\n                  </a>\r\n                </Link>\r\n                <p>\r\n                  {props.leadText ? (\r\n                    props.leadText + '...'\r\n                  ) : (\r\n                    <Skeleton count={4} />\r\n                  )}\r\n                </p>\r\n                <Link\r\n                  href={\r\n                    props.id && props.slug\r\n                      ? '/' + props.slug\r\n                      : ''\r\n                  }\r\n                >\r\n                  <a className=\"read-more\"> READ MORE</a>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </SkeletonTheme>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction SmallDown(props) {\r\n  return (\r\n    <>\r\n      <div className=\"post4 col-md-4 col-6\">\r\n        <div className=\"img\">\r\n          <Link\r\n            href={\r\n              props.id && props.slug\r\n                ? '/' + props.slug\r\n                : ''\r\n            }\r\n          >\r\n            <a>\r\n              <img\r\n                src={\r\n                  props.thumbnail\r\n                    ? props.thumbnail\r\n                    : '/assets/img/post-img3.svg'\r\n                }\r\n                alt={props.imageAlt ? props.imageAlt : ''}\r\n              />\r\n            </a>\r\n          </Link>\r\n        </div>\r\n        <div className=\"content\">\r\n          <Link\r\n            href={\r\n              props.id && props.slug\r\n                ? '/' + props.slug\r\n                : ''\r\n            }\r\n          >\r\n            <a>\r\n              <h6>\r\n                {props.headline ? (\r\n                  he.decode(props.headline)\r\n                ) : (\r\n                  <Skeleton count={2} />\r\n                )}\r\n              </h6>\r\n            </a>\r\n          </Link>\r\n          <span style={{ textTransform: 'uppercase' }}>\r\n            {props.published ? (\r\n              <Moment format=\"DD MMM YYYY\">{props.published}</Moment>\r\n            ) : (\r\n              <Skeleton />\r\n            )}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction SmallSide(props) {\r\n  return (\r\n    <>\r\n      <li>\r\n        <div className=\"img\">\r\n          <Link\r\n            href={\r\n              props.id && props.slug\r\n                ? '/' + props.slug\r\n                : ''\r\n            }\r\n          >\r\n            <a>\r\n              {props.thumbnail ? (\r\n                <img\r\n                  src={props.thumbnail}\r\n                  alt={props.imageAlt ? props.imageAlt : ''}\r\n                />\r\n              ) : (\r\n                <Skeleton height={'50px'} width={'50px'} />\r\n              )}\r\n            </a>\r\n          </Link>\r\n        </div>\r\n        <div className=\"content\">\r\n          <Link\r\n            href={\r\n              props.id && props.slug\r\n                ? '/' + props.slug\r\n                : ''\r\n            }\r\n          >\r\n            <a>\r\n              <p>\r\n                {props.headline ? (\r\n                  he.decode(props.headline)\r\n                ) : (\r\n                  <Skeleton count={2} width={'80%'} />\r\n                )}\r\n              </p>\r\n            </a>\r\n          </Link>\r\n        </div>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction WithCount(props) {\r\n  return (\r\n    <>\r\n      <li>\r\n        <span>\r\n          {props.count ? props.count : <Skeleton width=\"30px\" height=\"30px\" />}\r\n        </span>\r\n        <Link\r\n          href={\r\n            props.id && props.slug\r\n              ? '/' + props.slug\r\n              : ''\r\n          }\r\n        >\r\n          <a>\r\n            <p>\r\n              {props.headline ? (\r\n                he.decode(props.headline)\r\n              ) : (\r\n                <Skeleton count={2} width={'80%'} />\r\n              )}\r\n            </p>\r\n          </a>\r\n        </Link>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewsCards;\r\n"]},"metadata":{},"sourceType":"module"}