{"ast":null,"code":"import _regeneratorRuntime from \"D:/bdcrictime/beta/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/bdcrictime/beta/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\bdcrictime\\\\beta\\\\src\\\\pages\\\\CardFetchById.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport he from 'he';\nimport axios from 'axios';\nimport NewsCards from '../Components/NewsCards';\n\nfunction CardFetchById(props) {\n  _s();\n\n  var _useState = useState({}),\n      news = _useState[0],\n      setNews = _useState[1];\n\n  var _useState2 = useState(false),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  useEffect(function () {\n    function getNews() {\n      return _getNews.apply(this, arguments);\n    }\n\n    function _getNews() {\n      _getNews = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (typeof props.id === 'number') {\n                  axios.get('https://www.bdcrictime.com/wp-json/wp/v2/posts/' + props.id + '?_embed').then(function (res2) {\n                    setNews(res2.data);\n                    setLoaded(true);\n                  })[\"catch\"](function (err) {\n                    return console.log('Error in CardFetchById' + err.message);\n                  });\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getNews.apply(this, arguments);\n    }\n\n    getNews();\n  }, [props.id]);\n  return __jsx(React.Fragment, null, loaded ? __jsx(NewsCards, {\n    format: props.format,\n    id: news.id,\n    slug: news.slug,\n    thumbnail: loaded ? news._embedded['wp:featuredmedia'][0].source_url : '/img/newsupdate thumbnail.png',\n    headline: loaded ? news.title.rendered : null,\n    leadText: loaded ? news.acf.lead_text ? news.acf.lead_text : he.decode(news.excerpt.rendered.replace(/(<([^>]+)>)/gi, '')) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }) : __jsx(NewsCards, {\n    format: props.format,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }));\n}\n\n_s(CardFetchById, \"b+Qu3ea6q6dEu96Y8FKs4dqJL2k=\");\n\n_c = CardFetchById;\nexport default CardFetchById;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardFetchById\");","map":{"version":3,"sources":["D:/bdcrictime/beta/src/pages/CardFetchById.js"],"names":["React","useEffect","useState","he","axios","NewsCards","CardFetchById","props","news","setNews","loaded","setLoaded","getNews","id","get","then","res2","data","err","console","log","message","format","slug","_embedded","source_url","title","rendered","acf","lead_text","decode","excerpt","replace"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAAA,kBACJL,QAAQ,CAAC,EAAD,CADJ;AAAA,MACrBM,IADqB;AAAA,MACfC,OADe;;AAAA,mBAEAP,QAAQ,CAAC,KAAD,CAFR;AAAA,MAErBQ,MAFqB;AAAA,MAEbC,SAFa;;AAI5BV,EAAAA,SAAS,CAAC,YAAM;AAAA,aACCW,OADD;AAAA;AAAA;;AAAA;AAAA,0EACd;AAAA;AAAA;AAAA;AAAA;AACE,oBAAI,OAAOL,KAAK,CAACM,EAAb,KAAoB,QAAxB,EAAkC;AAChCT,kBAAAA,KAAK,CACFU,GADH,CAEI,oDACEP,KAAK,CAACM,EADR,GAEE,SAJN,EAMGE,IANH,CAMQ,UAACC,IAAD,EAAU;AACdP,oBAAAA,OAAO,CAACO,IAAI,CAACC,IAAN,CAAP;AACAN,oBAAAA,SAAS,CAAC,IAAD,CAAT;AACD,mBATH,WAUS,UAACO,GAAD;AAAA,2BAASC,OAAO,CAACC,GAAR,CAAY,2BAA2BF,GAAG,CAACG,OAA3C,CAAT;AAAA,mBAVT;AAWD;;AAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADc;AAAA;AAAA;;AAgBdT,IAAAA,OAAO;AACR,GAjBQ,EAiBN,CAACL,KAAK,CAACM,EAAP,CAjBM,CAAT;AAmBA,SACE,4BACGH,MAAM,GACL,MAAC,SAAD;AACE,IAAA,MAAM,EAAEH,KAAK,CAACe,MADhB;AAEE,IAAA,EAAE,EAAEd,IAAI,CAACK,EAFX;AAGE,IAAA,IAAI,EAAEL,IAAI,CAACe,IAHb;AAIE,IAAA,SAAS,EACPb,MAAM,GACFF,IAAI,CAACgB,SAAL,CAAe,kBAAf,EAAmC,CAAnC,EAAsCC,UADpC,GAEF,+BAPR;AASE,IAAA,QAAQ,EAAEf,MAAM,GAAGF,IAAI,CAACkB,KAAL,CAAWC,QAAd,GAAyB,IAT3C;AAUE,IAAA,QAAQ,EACNjB,MAAM,GACFF,IAAI,CAACoB,GAAL,CAASC,SAAT,GACErB,IAAI,CAACoB,GAAL,CAASC,SADX,GAEE1B,EAAE,CAAC2B,MAAH,CAAUtB,IAAI,CAACuB,OAAL,CAAaJ,QAAb,CAAsBK,OAAtB,CAA8B,eAA9B,EAA+C,EAA/C,CAAV,CAHA,GAIF,IAfR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAoBL,MAAC,SAAD;AAAW,IAAA,MAAM,EAAEzB,KAAK,CAACe,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBJ,CADF;AA0BD;;GAjDQhB,a;;KAAAA,a;AAmDT,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport he from 'he';\r\nimport axios from 'axios';\r\nimport NewsCards from '../Components/NewsCards';\r\n\r\nfunction CardFetchById(props) {\r\n  const [news, setNews] = useState({});\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getNews() {\r\n      if (typeof props.id === 'number') {\r\n        axios\r\n          .get(\r\n            'https://www.bdcrictime.com/wp-json/wp/v2/posts/' +\r\n              props.id +\r\n              '?_embed'\r\n          )\r\n          .then((res2) => {\r\n            setNews(res2.data);\r\n            setLoaded(true);\r\n          })\r\n          .catch((err) => console.log('Error in CardFetchById' + err.message));\r\n      }\r\n    }\r\n    getNews();\r\n  }, [props.id]);\r\n\r\n  return (\r\n    <>\r\n      {loaded ? (\r\n        <NewsCards\r\n          format={props.format}\r\n          id={news.id}\r\n          slug={news.slug}\r\n          thumbnail={\r\n            loaded\r\n              ? news._embedded['wp:featuredmedia'][0].source_url\r\n              : '/img/newsupdate thumbnail.png'\r\n          }\r\n          headline={loaded ? news.title.rendered : null}\r\n          leadText={\r\n            loaded\r\n              ? news.acf.lead_text\r\n                ? news.acf.lead_text\r\n                : he.decode(news.excerpt.rendered.replace(/(<([^>]+)>)/gi, ''))\r\n              : null\r\n          }\r\n        />\r\n      ) : (\r\n        <NewsCards format={props.format} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardFetchById;\r\n"]},"metadata":{},"sourceType":"module"}